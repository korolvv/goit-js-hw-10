{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst fullfilledRadio = document.querySelector('[value=\"fulfilled\"]');\n\n// const rejectedRadio = document.querySelector('[value=\"rejected\"]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const delay = delayInput.value;\n  const promise = new Promise((resolve, reject) => {\n    if (fullfilledRadio.checked) {\n      setTimeout(() => {\n        resolve(delay);\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject(delay);\n      }, delay);\n    }\n  });\n\n  promise.then(onFullfilled);\n\n  function onFullfilled(delay) {\n    iziToast.success({\n      position: 'topRight',\n      title: '✅',\n      message: `Fulfilled promise in ${delay}ms`,\n    });\n  }\n\n  promise.catch(onRejected);\n\n  function onRejected(delay) {\n    iziToast.error({\n      position: 'topRight',\n      title: '❌',\n      message: `Rejected promise in ${delay}ms`,\n    });\n  }\n});\n"],"names":["form","delayInput","fullfilledRadio","e","delay","promise","resolve","reject","onFullfilled","iziToast","onRejected"],"mappings":"+FAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAkB,SAAS,cAAc,qBAAqB,EAIpEF,EAAK,iBAAiB,SAAUG,GAAK,CACnCA,EAAE,eAAc,EAChB,MAAMC,EAAQH,EAAW,MACnBI,EAAU,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC3CL,EAAgB,QAClB,WAAW,IAAM,CACfI,EAAQF,CAAK,CACd,EAAEA,CAAK,EAER,WAAW,IAAM,CACfG,EAAOH,CAAK,CACb,EAAEA,CAAK,CAEd,CAAG,EAEDC,EAAQ,KAAKG,CAAY,EAEzB,SAASA,EAAaJ,EAAO,CAC3BK,EAAS,QAAQ,CACf,SAAU,WACV,MAAO,IACP,QAAS,wBAAwBL,CAAK,IAC5C,CAAK,CACF,CAEDC,EAAQ,MAAMK,CAAU,EAExB,SAASA,EAAWN,EAAO,CACzBK,EAAS,MAAM,CACb,SAAU,WACV,MAAO,IACP,QAAS,uBAAuBL,CAAK,IAC3C,CAAK,CACF,CACH,CAAC"}